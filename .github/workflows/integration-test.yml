name: Integration-test

on:
  workflow_call:
    inputs:
      task-name:
        description: 'Name of the gradle task to run'
        required: true
        type: string

    secrets:
      VRPACKAGETOKEN:
        required: true

jobs:
  integration-test:
    runs-on: ubuntu-latest

    steps:
      - name: Clone VRFramework
        uses: actions/checkout@v3
        with:
          repository: vrsoftbr/VRFramework
          path: VRFramework
          token: ${{ secrets.VRPACKAGETOKEN }}
          fetch-depth: 0

      - name: "Checkout VRFramework Branch"
        run: |
          cd VRFramework
          branchLocal=$(git ls-remote --heads origin ${{ github.event.pull_request.head.ref }});
          if ! [ -z "$branchLocal" ]; then
                    branch=${{ github.event.pull_request.head.ref }}
            else
                    branch=${{ github.event.pull_request.base.ref }} 
            fi
            echo $branch;
            git checkout $branch;
      
      - name: Clone VRNFe
        uses: actions/checkout@v3
        with:
          repository: vrsoftbr/VRNFe
          path: VRNFe
          token: ${{ secrets.VRPACKAGETOKEN }}
          fetch-depth: 0

      - name: "Checkout VRNFe Branch"
        run: |
          cd VRNFe
          branchLocal=$(git ls-remote --heads origin ${{ github.event.pull_request.head.ref }});
          if ! [ -z "$branchLocal" ]; then
                    branch=${{ github.event.pull_request.head.ref }}
            else
                    branch=${{ github.event.pull_request.base.ref }} 
            fi
            echo $branch;
            git checkout $branch;
      - name: Clone VRWorkflow
        uses: actions/checkout@v3
        with:
          repository: vrsoftbr/VRWorkflow
          path: VRWorkflow
          token: ${{ secrets.VRPACKAGETOKEN }}
          fetch-depth: 0

      - name: "Checkout VRWorkflow Branch"
        run: |
          cd VRWorkflow
          branchLocal=$(git ls-remote --heads origin ${{ github.event.pull_request.head.ref }});
          if ! [ -z "$branchLocal" ]; then
                    branch=${{ github.event.pull_request.head.ref }}
            else
                    branch=${{ github.event.pull_request.base.ref }} 
            fi
            echo $branch;
            git checkout $branch;
      - name: Clone VRCore
        uses: actions/checkout@v3
        with:
          path: VRCore
          fetch-depth: 0

      - name: Creating vr.properties
        run: |
          sudo mkdir /vr
          sudo chown -R $USER /vr
          touch /vr/vr.properties
          echo "database.ip=localhost" >> /vr/vr.properties
          echo "database.porta=5432" >> /vr/vr.properties
          echo "database.nome=vr" >> /vr/vr.properties
          echo "database.usuario=postgres" >> /vr/vr.properties
          echo "database.senha=VrPost@Server" >> /vr/vr.properties
          echo "system.numeroloja=1" >> /vr/vr.properties
          
          cat /vr/vr.properties

      - name: Creating folder to backup
        run: |
          sudo mkdir /db

      - name: Download backup
        id:  download-backup
        uses: actions/cache/restore@v4
        with:
          path: ./db/updated_database.bak
          key: ${{ github.run_number }}
      
      - name: Run Docker Container from vrsoftbr/postgres
        run: |
          docker login ${{ secrets.VRDOCKERLOGIN }}
          docker run -P --name bancovr -p 5432:5432 -d vrsoftbr/postgres
      
      - name: Restore Backup
        run: |
          docker cp ./db/updated_database.bak bancovr:/bkp/updated_database.bak
          docker exec bancovr pg_restore -U postgres -d vr /bkp/updated_database.bak

      - name: executing ${{ inputs.task-name }}
        run: |
          cd VRCore && ./gradlew ${{ inputs.task-name }} -x VRNFe:integrationTest
        env:
          USERNAME: ${{ github.actor }}
          TOKEN: ${{ secrets.VRPACKAGETOKEN }}

      - name: 'Integration Test report'
        uses: actions/upload-artifact@v2
        if: ${{ always() }}
        with:
          name: integrationTestReport
          path: VRCore/build/reports/tests/integrationTest
          retention-days: 2