
name: Chat Notify

on:
  workflow_call:
    inputs:
      repository:
        required: true
        type: string
      message:
        required: true
        type: string
      problem:
        required: true
        type: boolean
      urlChatWebHooks:
        required: true
        type: string

jobs:
  send-message:
    name: Send Message
    runs-on: ubuntu-latest
    steps:
    - run: |
        echo "repository:" ${{ inputs.repository }}
        echo "message:" ${{ inputs.message }}
        echo "problem:" ${{ inputs.problem }}
        echo "urlChatWebHooks:" ${{ inputs.urlChatWebHooks }}
        
    - name: Write Message Content
      id: write-message-content
      run: |
        wget -q https://storage.googleapis.com/imagem-aplicativos/bot/message-card-deploy.json
        MESSAGE_CONTENT=$(cat message-card-deploy.json | json_pp)
        echo "Message Content: $MESSAGE_CONTENT"
        echo ::set-output name=message::$MESSAGE_CONTENT
        
        echo 'MESSAGE<<EOF' >> $GITHUB_ENV
        cat message-card-deploy.json | json_pp >> $GITHUB_ENV
        echo 'EOF' >> $GITHUB_ENV
        
        rm message-card-deploy.json
        
    - name: Notify
      if: inputs.problem == false
      run: |
        curl --location --request POST '${{ inputs.urlChatWebHooks }}' \
        --header 'Content-Type: application/json' \
        --data-raw '{
            "cardsV2": [
              {
                "cardId": "unique-card-id",
                "card": {
                  "header": {
                    "title": "GitHub Actions",
                    "subtitle": "VR Software",
                    "imageUrl": "https://storage.googleapis.com/imagem-aplicativos/bot/bot-github.png",
                    "imageType": "CIRCLE",
                    "imageAltText": "GitHub Actions - VR Software"
                  },
                  "sections": [
                    {
                      "header": "${{ inputs.repository }}",
                      "collapsible": false,
                      "widgets": [
                        {
                          "decoratedText": {
                            "startIcon": {
                              "knownIcon": "EMAIL"
                            },
                            "text": "${{ inputs.message }}"
                          }
                        },
                        {
                          "buttonList": {
                            "buttons": [
                              {
                                "text": "Ver Releases",
                                "onClick": {
                                  "openLink": {
                                    "url": "https://github.com/vrsoftbr/${{ inputs.repository }}/releases"
                                  }
                                }
                              },
                              {
                                "text": "Ver Packages",
                                "onClick": {
                                  "openLink": {
                                    "url": "https://github.com/orgs/vrsoftbr/packages?repo_name=${{ inputs.repository }}"
                                  }
                                }
                              }
                            ]
                          }
                        }
                      ]
                    }
                  ]
                }
              }
            ]
          }'        
