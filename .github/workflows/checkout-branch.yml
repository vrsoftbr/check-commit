name: Checkout-Branch

on:
  workflow_call:
    inputs:
      main-project:
        description: 'Main project name that requires another project'
        required: true
        type: string

      child-project:
        description: 'Name of the child project to be checkout from the branch'
        required: true
        type: string

      main-project-branch-name:
        description: 'Branch name of the main project that will be used for checkout in the child project'
        required: true
        type: string
        

    secrets:
      VRPACKAGETOKEN:
        required: true

jobs:
  checkout-branch:
    outputs:
      status: ${{ job.status}}
    
    runs-on: ubuntu-latest   
    
    steps:
      - uses: actions/checkout@v3
        with:
          path: ${{ inputs.main-project }}
          token: ${{ secrets.VRPACKAGETOKEN }}  
          fetch-depth: 0

      - uses: actions/checkout@v3
        with:
          path: ${{ inputs.child-project }}
          token: ${{ secrets.VRPACKAGETOKEN }}
          fetch-depth: 0

    - name: "Checkout ${{ inputs.main-project }} Branch"
      run: |
        cd ${{ inputs.child-project }}
        branchLocal=$(git ls-remote --heads origin ${{ inputs.main-project-branch-name }});
        if ! [ -z "$branchLocal" ]; then
                  branch=${{ inputs.main-project-branch-name }}
                  pwd
          else
                  cd ../${{ inputs.main-project }}
                  pwd
                  branch=$(git show-branch -a \
                  | grep '\*' \
                  | grep -v `git rev-parse --abbrev-ref HEAD` \
                  | head -n1 \
                  | sed 's/.*\[\(.*\)\].*/\1/' \
                  | sed 's/[\^~].*//') 
          fi
          echo $branch;
          cd ../${{ inputs.child-project }}
          git checkout $branch;